{"version":3,"sources":["ApiContext.js","components/Favorite.js","components/NewsArticle.js","components/News.js","components/Search.js","components/layout/Nav.js","App.js","serviceWorker.js","index.js"],"names":["ApiContext","createContext","ApiContextProvider","props","useState","data","setData","useEffect","axios","get","then","response","catch","error","console","log","Provider","value","children","Favorite","state","liked","handleClick","bind","this","setState","nextProps","nextState","localStorage","setItem","JSON","stringify","label","className","onClick","style","color","React","Component","NewsArticle","item","headline","story","Card","Link","href","url","News","useContext","Fragment","items","map","news","key","id","Search","storyTitle","onChange","e","target","name","onSubmit","findStory","type","placeholder","Nav","Navbar","Brand","src","width","height","alt","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.736466e3.chunk.js","sourcesContent":["import React, { createContext,useEffect,useState } from 'react';\r\nimport axios from 'axios';\r\n\r\n\r\nexport const ApiContext = createContext();\r\n\r\nexport const ApiContextProvider = (props) => {\r\n    const [data, setData] = useState();\r\n\r\n    useEffect(() => {\r\n        axios.get(\r\n            `https://nl-static-site-assets.s3.ap-south-1.amazonaws.com/reports.json`\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setData(response.data)\r\n        })\r\n        .catch((error) => console.log(error));\r\n    }, []);\r\n\r\n    return (\r\n        <ApiContext.Provider value={{data}}>\r\n            {props.children}\r\n        </ApiContext.Provider>\r\n    );\r\n}","import React from 'react'\r\n\r\n\r\nclass Favorite extends React.Component {\r\n    constructor() {\r\n      super();\r\n      this.state = {\r\n        liked: false\r\n      };\r\n      this.handleClick = this.handleClick.bind(this);\r\n    } \r\n   \r\n    handleClick() {\r\n      this.setState({\r\n        liked: !this.state.liked\r\n      });\r\n    }\r\n\r\n\r\n    componentWillUpdate(nextProps, nextState) {\r\n        localStorage.setItem('Favorite',JSON.stringify(nextState.liked));\r\n    }\r\n    \r\n    \r\n    render() {\r\n     // const text = this.state.liked ? 'liked' : 'haven\\'t liked';\r\n      const label = this.state.liked ? 'Unlike' : 'Like'\r\n      if(label === 'Like'){\r\n        return (\r\n            <div>\r\n                <button className='button' onClick={this.handleClick}>\r\n                    <i className='fa fa-heart fa-lg' style={{color:'#33c3f0'}}></i>\r\n                </button>          \r\n            </div>\r\n            );\r\n        }\r\n\r\n        if(label === 'Unlike'){\r\n            return (\r\n                <div>\r\n                    <button className='button' onClick={this.handleClick}>\r\n                        <i className='fa fa-heart fa-lg' style={{color:'red'}}></i>\r\n                    </button>          \r\n                </div>\r\n                );\r\n          }\r\n      \r\n    }\r\n  }\r\n  \r\n  \r\n\r\n  export default Favorite","import React from 'react';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Favorite from './Favorite';\r\n\r\n\r\n\r\nfunction NewsArticle({data}) {\r\n    return (\r\n      <div className='col-md-6'>\r\n        <div className='card mb-4 shadow-sm'>\r\n          <div className='card-body'>\r\n          <h5>{data.item.headline}</h5>\r\n          <p><i className='fa fa-user'> {data.story['author-name']}</i></p>\r\n          <div className='row'>\r\n          <Card.Link href={data.story.url}> <i className='fa fa-link'>  Open Article</i></Card.Link>\r\n          <Favorite />        \r\n          </div>\r\n          </div>\r\n        </div>\r\n\r\n      </div>        \r\n    )\r\n}\r\n\r\nexport default NewsArticle;","import React , { useContext }from 'react';\r\nimport { ApiContext } from '../ApiContext';\r\nimport NewsArticle from './NewsArticle';\r\n// import SearchArticle from './SearchArticle';\r\n\r\n\r\nfunction News(props) {\r\n\r\n    const {data}  = useContext(ApiContext);\r\n    //console.log(data);\r\n    \r\n\r\n    return (\r\n        <React.Fragment>\r\n        <div className='container'>\r\n        <h2 className='text-center mb-4'>All Stories</h2>\r\n        <div className='row'>     \r\n                 {data ? data.items.map(news => (\r\n                 <NewsArticle data={news} key={news.id} />)) \r\n                 : 'Loading'}\r\n        </div>\r\n        </div>\r\n        </React.Fragment>\r\n        \r\n    );\r\n}\r\n\r\nexport default News\r\n","import React, {Component} from 'react';\r\n//import axios from 'axios';\r\n\r\n\r\nclass Search extends Component {\r\n  state = { \r\n    storyTitle:''\r\n   };\r\n\r\n  //  findStory = (e) =>{\r\n  //    e.preventDefault();\r\n\r\n  //    axios.get(\r\n  //     `https://nl-static-site-assets.s3.ap-south-1.amazonaws.com/reports.json`\r\n  //     )\r\n  //     .then((response) => {\r\n  //      // console.log(response.data.items);\r\n  //       //setData(response.data)\r\n  //     })\r\n  //   .catch((error) => console.log(error));\r\n  // }\r\n\r\n   onChange = e => {\r\n     this.setState({ [e.target.name]:e.target.value});\r\n   }\r\n\r\n  render() { \r\n    return ( \r\n    \r\n    <div> \r\n        <div className='container'>\r\n          <form onSubmit={this.findStory}>\r\n          <div className='form-group'>\r\n          <input \r\n            type='text'\r\n            className='form-control form-control-lg'\r\n            placeholder='Search'\r\n            name='storyTitle'\r\n            value={this.state.storyTitle}\r\n            onChange={this.onChange}\r\n          />\r\n          </div>\r\n          <button \r\n            className='btn btn-dark btn-lg btn-block mb-5'\r\n            type='submit'\r\n          >\r\n            Search \r\n          </button>\r\n          </form>\r\n        </div>\r\n    </div> \r\n  );\r\n  }\r\n}\r\n \r\nexport default Search;","import React from 'react';\r\nimport Navbar from 'react-bootstrap/Navbar';\r\n\r\nconst Nav =() =>{\r\n    return (\r\n        <nav className='navbar navbar-dark bg-dark mb-5'>\r\n            <span className='navbar-brand mb-0 h1 mx-auto'></span>\r\n            <Navbar.Brand href=\"#home\">\r\n      <img\r\n        src=\"https://images.assettype.com/newslaundry/2020-01/d91cad07-9650-47e9-8bdc-9a6247354d95/Header_logo_NL__2_New.png\"\r\n        width=\"240\"\r\n        height=\"60\"\r\n        className=\"d-inline-block align-top\"\r\n        alt=\"React Bootstrap logo\"\r\n      />\r\n    </Navbar.Brand>\r\n</nav>\r\n    )\r\n}\r\n\r\nexport default Nav;","import React,{Component} from 'react';\nimport {ApiContextProvider} from \"./ApiContext\";\nimport News from './components/News';\nimport Search from './components/Search';\n\n// import SearchArticle from './components/SearchArticle';\nimport Nav from './components/layout/Nav';\n\nclass App extends Component {\n  render(){\n  return (\n    <ApiContextProvider>\n      <Nav />\n      <Search />\n\n\n        <News />\n    </ApiContextProvider>\n      \n    \n  );\n}\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />,document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}